---
##[PLAY] Configure ONTAP Cluster
- hosts: localhost
  gather_facts: no
  vars_prompt:
    - name: admin_user_name
      prompt: Domain Admin Username (used for CIFS configuration)
    - name: admin_password
      prompt: Domain Admin Password (used for CIFS configuration)
  vars:
    input: &input
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
    file: _var_roles.yml
  vars_files:
  - "{{ file }}"

  tasks:
  # Gather facts about the ONTAP cluster
  - name: Get ONTAP version
    na_ontap_gather_facts:
      state: info
      <<: *input
      https: true
      validate_certs: false
      ontapi: 32

  # Configure Cluster
  - import_role:
      name: na_ontap_cluster_config
    vars:
      <<: *input

  # Configure SVMs
  - import_role:
      name: na_ontap_vserver_create
    vars:
      <<: *input
    when: vservers != None

  # Configure NAS volumes
  - import_role:
      name: na_ontap_nas_create
    vars:
      <<: *input
    when: nas != None

  # Configure SAN volumes and LUNs
  - import_role:
      name: na_ontap_san_create
    vars:
      <<: *input
    when: luns != None

##[PLAY] Mount NFS export to hosts in /etc/ansible/hosts
- hosts: prod
  name: Play [Configure nfs on Linux Instances and Mount the nfs export]
  vars_files:
  - _var_playbook.yml
  tasks:

#   Install NFS on Linux Instances
  - name: Install nfs on all systems in /etc/ansible/hosts
    package:
      name: nfs-utils
      state: present

#   Mount ONTAP NFS export on all Linux Instances
  - name: Mount nfs export on all systems in /etc/ansible/hosts
    mount:
      state: mounted
      path: /mnt/tmp
      src: "{{ data_lif2 }}:/{{ volname}}"
      fstype: nfs