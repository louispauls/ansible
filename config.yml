---
- hosts: localhost
  name: Setup ONTAP
  vars_files:
  - variables.yml
  tasks:
#
#Create 4 Aggregates
#
  - name: Task 1 - Create Aggregates (na_ontap_aggregate)
    na_ontap_aggregate:
      state: "{{ state }}"
      name: "{{ item.name }}"
      nodes: "{{ item.node }}"
      disk_count: 7
      raid_size: 7
      https: true
      validate_certs: false
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
    with_items:
      - { name: "n1_aggr1", node: "cluster1-01" }
      - { name: "n1_aggr2", node: "cluster1-01" }
      - { name: "n2_aggr1", node: "cluster1-02" }
      - { name: "n2_aggr2", node: "cluster1-02" }
#
#Create a SVM
#
  - name: Task 2 - Create a SVM (na_ontap_svm)
    na_ontap_svm:
      state: "{{ state }}"
      name: "{{ vserver }}"
      root_volume: "{{ vserver}}_root"
      root_volume_aggregate: "{{ aggr }}"
      root_volume_security_style: unix
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
#
#Create an Interface
#
  - name: Task 3 - Create an Interface (na_ontap_interface)
    na_ontap_interface:
      state: "{{ state }}"
      interface_name: "{{ vserver }}_mgmt_data_1"
      home_port: e0d
      home_node: cluster1-01
      role: data
      protocols: nfs
      admin_status: up
      failover_policy: local-only
      firewall_policy: mgmt
      is_auto_revert: true
      address: "{{ address }}"
      netmask: 255.255.255.0
      vserver: "{{ vserver }}"
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
#
#Configure NFS
#
  - name: Task 4 - Configure NFS (na_ontap_nfs)
    na_ontap_nfs:
      state: "{{ state }}"
      service_state: started
      vserver: "{{ vserver }}"
      nfsv3: enabled
      nfsv4: disabled
      nfsv41: disabled
      tcp: enabled
      udp: enabled
      vstorage_state: disabled
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
#
#Setup Default Rules
#
  - name: Task 5 - Create default Export Policy Rule (na_ontap_export_policy_rule)
    na_ontap_export_policy_rule:
      state: "{{ state }}"
      policy_name: default
      vserver: "{{ vserver }}"
      client_match: 0.0.0.0/0
      ro_rule: any
      rw_rule: none
      super_user_security: none
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
#
#Create Policy
#
  - name: Task 6 - Create Export Policy (na_ontap_export_policy)
    na_ontap_export_policy:
      state: "{{ state }}"
      name: "{{ policy }}"
      vserver: "{{ vserver }}"
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
#
#Setup Rules
#
  - name: Task 7 - Create Export Policy Rule (na_ontap_export_policy_rule)
    na_ontap_export_policy_rule:
      state: "{{ state }}"
      policy_name: "{{ policy }}"
      vserver: "{{ vserver }}"
      client_match: "{{ client }}"
      ro_rule: sys
      rw_rule: sys
      super_user_security: sys
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
#
#Create Volume
#
  - name: Task 8 - Create Volume (na_ontap_volume)
    na_ontap_volume:
      state: "{{ state }}"
      name: "{{ volname }}"
      aggregate_name: "{{ aggr }}"
      size: 1
      size_unit: gb
      policy: "{{ policy }}"
      junction_path: "/{{ volname }}"
      space_guarantee: "none"
      vserver: "{{ vserver }}"
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false      